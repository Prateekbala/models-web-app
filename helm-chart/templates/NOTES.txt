1. Get the application URL by running these commands:
{{- if .Values.istio.enabled }}
  The KServe Models Web App has been deployed with Istio integration.
  {{- if contains "kubeflow" (index .Values.istio.virtualService.gateways 0) }}
  Access the application through your Kubeflow installation at:
  https://your-kubeflow-domain{{ .Values.istio.virtualService.uriPrefix }}
  {{- else }}
  Access the application through Istio Gateway at:
  http://your-istio-gateway{{ .Values.istio.virtualService.uriPrefix }}
  {{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "kserve-models-web-app.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "kserve-models-web-app.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "kserve-models-web-app.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "kserve-models-web-app.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Verify the deployment:
  kubectl get pods -l app.kubernetes.io/instance={{ .Release.Name }} -n {{ .Release.Namespace }}

3. Check the logs:
  kubectl logs -l app.kubernetes.io/instance={{ .Release.Name }} -n {{ .Release.Namespace }}

{{- if not .Values.rbac.create }}

WARNING: RBAC is disabled. The application may not function correctly without proper permissions.
{{- end }}

{{- if eq .Values.config.APP_DISABLE_AUTH "False" }}

NOTE: Authentication is enabled. Make sure your cluster has the proper authentication setup.
{{- end }}

{{- if and .Values.istio.enabled (not .Values.istio.authorizationPolicy.enabled) }}

WARNING: Istio is enabled but AuthorizationPolicy is disabled. Consider enabling it for better security.
{{- end }}