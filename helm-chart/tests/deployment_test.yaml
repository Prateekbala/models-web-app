suite: test deployment
templates:
  - deployment.yaml
tests:
  - it: should create deployment with default values
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-kserve-models-web-app
      - equal:
          path: spec.replicas
          value: 1
      - equal:
          path: spec.template.spec.containers[0].image
          value: "ghcr.io/kserve/models-web-app:latest"
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Always

  - it: should use custom image when specified
    set:
      image.repository: custom/repo
      image.tag: v1.0.0
      image.pullPolicy: IfNotPresent
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: "custom/repo:v1.0.0"
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent

  - it: should set custom replica count
    set:
      replicaCount: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3

  - it: should include security context
    asserts:
      - equal:
          path: spec.template.spec.securityContext.runAsNonRoot
          value: true
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsUser
          value: 1000
      - equal:
          path: spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false

  - it: should include health probes
    asserts:
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.path
          value: /healthz/liveness
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.path
          value: /healthz/readiness

  - it: should include pod annotations when specified
    set:
      podAnnotations:
        test.annotation: "test-value"
        sidecar.istio.io/inject: "true"
    asserts:
      - equal:
          path: spec.template.metadata.annotations
          value:
            test.annotation: "test-value"
            sidecar.istio.io/inject: "true"

  - it: should include resources when specified
    set:
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 500m
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 512Mi
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 250m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 256Mi