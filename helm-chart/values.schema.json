{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "KServe Models Web App Helm Chart Values Schema",
  "description": "Schema for validating values.yaml for the KServe Models Web App Helm Chart",
  "properties": {
    "replicaCount": {
      "type": "integer",
      "minimum": 1,
      "description": "Number of replicas for the deployment"
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Image repository"
        },
        "tag": {
          "type": "string",
          "description": "Image tag"
        },
        "pullPolicy": {
          "type": "string",
          "enum": ["Always", "IfNotPresent", "Never"],
          "description": "Image pull policy"
        }
      },
      "required": ["repository", "pullPolicy"],
      "additionalProperties": false
    },
    "nameOverride": {
      "type": "string",
      "description": "Override the name of the chart"
    },
    "fullnameOverride": {
      "type": "string",
      "description": "Override the fullname of the chart"
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Specifies whether a service account should be created"
        },
        "annotations": {
          "type": "object",
          "description": "Annotations to add to the service account"
        },
        "name": {
          "type": "string",
          "description": "The name of the service account to use"
        }
      },
      "additionalProperties": false
    },
    "rbac": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean",
          "description": "Specifies whether RBAC resources should be created"
        }
      },
      "additionalProperties": false
    },
    "service": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["ClusterIP", "NodePort", "LoadBalancer", "ExternalName"],
          "description": "Service type"
        },
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "Service port"
        },
        "nodePort": {
          "type": "integer",
          "minimum": 30000,
          "maximum": 32767,
          "description": "NodePort (only used if type is NodePort)"
        }
      },
      "required": ["type", "port"],
      "additionalProperties": false
    },
    "config": {
      "type": "object",
      "description": "Application configuration parameters",
      "additionalProperties": {
        "type": "string"
      }
    },
    "istio": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable Istio resources"
        },
        "virtualService": {
          "type": "object",
          "properties": {
            "gateways": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Istio gateways"
            },
            "hosts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Istio hosts"
            },
            "uriPrefix": {
              "type": "string",
              "description": "URI prefix for routing"
            }
          },
          "additionalProperties": true
        },
        "authorizationPolicy": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable authorization policy"
            },
            "action": {
              "type": "string",
              "enum": ["ALLOW", "DENY"],
              "description": "Authorization action"
            }
          },
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    },
    "resources": {
      "type": "object",
      "description": "Resource limits and requests"
    },
    "autoscaling": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable autoscaling"
        },
        "minReplicas": {
          "type": "integer",
          "minimum": 1,
          "description": "Minimum number of replicas"
        },
        "maxReplicas": {
          "type": "integer",
          "minimum": 1,
          "description": "Maximum number of replicas"
        },
        "targetCPUUtilizationPercentage": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "description": "Target CPU utilization percentage"
        }
      },
      "additionalProperties": true
    },
    "podDisruptionBudget": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable pod disruption budget"
        }
      },
      "additionalProperties": true
    },
    "networkPolicy": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable network policy"
        }
      },
      "additionalProperties": true
    },
    "monitoring": {
      "type": "object",
      "properties": {
        "serviceMonitor": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable ServiceMonitor"
            }
          },
          "additionalProperties": true
        },
        "prometheusRule": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable PrometheusRule"
            }
          },
          "additionalProperties": true
        }
      },
      "additionalProperties": false
    }
  },
  "required": ["replicaCount", "image", "service"]
}